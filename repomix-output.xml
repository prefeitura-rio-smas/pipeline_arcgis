This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/
  workflows/
    ci_cd.yml
pipeline/
  constants.py
  flows.py
  pipelines.yaml
  tasks.py
  utils.py
queries/
  models/
    dashboard_arcgis/
      abordagem_ficha.sql
      abordagem_repeat.sql
      schema.yml
  dbt_project.yml
  profiles.yml
.gitignore
Dockerfile
entrypoint.sh
requirements.txt
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="pipeline/constants.py">
# pipeline/constants.py
from pathlib import Path
from pydantic_settings import BaseSettings, SettingsConfigDict

class Settings(BaseSettings):
    # --- ArcGIS ---
    AGOL_URL: str
    AGOL_USER: str
    AGOL_PWD: str
    SIURB_URL: str
    SIURB_USER: str
    SIURB_PWD: str
    AGOL_LAYER_ID: str
    SIURB_LAYER_ID: str

    # --- GCP ---
    GCP_PROJECT: str = "rj-smas-dev"
    GCP_DATASET: str = "arcgis_raw"
    GCS_BUCKET: str  = "rj-smas-dev"

    # ✅ aceita variáveis a mais e ignora
    model_config = SettingsConfigDict(
        env_file      = Path(__file__).parents[1] / ".env",  # ajuste caminho se quiser
        extra         = "ignore",
        case_sensitive=False,
    )

settings = Settings()
</file>

<file path="pipeline/pipelines.yaml">
# pipeline/pipelines.yaml
# Cada bloco descreve UM Feature Service e suas camadas

- name: abordagem                               # prefixo dos nomes Projetos
  feature_id: 6832ff4ca54c4608b169682ae3a5b088  # ArcGIS item.id (Feature Service)
  account: siurb                                # opcional; default = siurb
  layers:
    ficha: 0                                    # <apelido>: <índice da layer>
    repeat: 1
</file>

<file path="pipeline/tasks.py">
# pipeline/tasks.py
from pathlib import Path
import pandas as pd
from google.cloud import bigquery
from .utils import fetch_dataframe, bq_client, dataset_ref, add_timestamp

def extract_arcgis(
    *,
    feature_id: str, 
    account: str = "siurb",
    layer: int = 1,
    where: str = "1=1",
    max_records: int = 5000,
) -> pd.DataFrame:
    """E = Extract."""
    return fetch_dataframe(account=account, feature_id=feature_id, layer=layer , where=where, max_records=max_records)

def stage_to_parquet(df: pd.DataFrame, path: Path) -> Path:
    """Salva dataframe localmente em parquet (formato rápido)."""
    add_timestamp(df)
    path.parent.mkdir(parents=True, exist_ok=True)
    df.to_parquet(path, index=False)
    return path

def load_to_bigquery(
    path: Path,
    table: str,
    *,
    write_disposition: bigquery.WriteDisposition = "WRITE_TRUNCATE",
):
    """L = Load (carrega parquet -> BQ via load_job)."""
    client = bq_client()
    job_cfg = bigquery.LoadJobConfig(
        autodetect=True,
        source_format=bigquery.SourceFormat.PARQUET,
        write_disposition=write_disposition,
    )
    with path.open("rb") as f:
        job = client.load_table_from_file(
            f,
            destination=f"{dataset_ref()}.{table}",
            job_config=job_cfg,
        )
    job.result()  # espera terminar
    return job.output_rows
</file>

<file path="pipeline/utils.py">
# pipeline/utils.py
from functools import lru_cache
from typing import Literal
import pandas as pd
from arcgis.gis       import GIS
from arcgis.features  import FeatureLayer
from google.cloud     import bigquery, storage
from .constants       import settings
from datetime         import datetime, timezone

# ---------- ArcGIS ----------
def _get_gis(account: Literal["siurb", "agol"]) -> GIS:
    if account == "siurb":
        return GIS(settings.SIURB_URL, settings.SIURB_USER, settings.SIURB_PWD)
    elif account == "agol":
        return GIS(settings.AGOL_URL, settings.AGOL_USER, settings.AGOL_PWD)
    else:
        raise ValueError("account deve ser 'siurb' ou 'agol'")

def get_feature_layer(account: str, feature_id: str, layer: int) -> FeatureLayer:
    gis  = _get_gis(account)
    item = gis.content.get(
        feature_id
    )
    return item.layers[layer] 

def fetch_dataframe(
    account: str,
    feature_id: str,
    layer: int,
    where: str = "1=1",
    max_records: int = 5000,
):
    """Baixa dados sem geometria e devolve DataFrame Polars/Pandas."""
    fl  = get_feature_layer(account, feature_id, layer)
    sdf = fl.query(
        where=where,
        out_fields="*",
        return_geometry=False,
        max_records=max_records,
    ).sdf  # ArcGIS devolve Spatial DataFrame (pandas)
    return sdf

# ---------- BigQuery / GCS ----------
@lru_cache
def bq_client() -> bigquery.Client:
    return bigquery.Client(project=settings.GCP_PROJECT)

@lru_cache
def gcs_client() -> storage.Client:
    return storage.Client(project=settings.GCP_PROJECT)

def dataset_ref() -> str:
    return f"{settings.GCP_PROJECT}.{settings.GCP_DATASET}"

# ---------- Outros ----------
def add_timestamp(df: pd.DataFrame, column="timestamp_captura") -> pd.DataFrame:
    """
    Acrescenta coluna ISO-8601 UTC (AAAA-MM-DDTHH:MM:SS) ao DataFrame.
    Retorna a mesma instância (conveniente para encadear).
    """
    df[column] = datetime.now(tz=timezone.utc).isoformat(timespec="seconds")
    return df
</file>

<file path="queries/models/dashboard_arcgis/abordagem_ficha.sql">
-- models/dashboard_arcgis/abordagem_ficha.sql

SELECT 
  uniquerowid,
  unidade_calculo,
  nome_usuario,
  SAFE.PARSE_DATE('%d/%m/%Y', data_nascimento) AS data_nascimento,
  cpf,
  nome_mae,
  filtro_ano_ultima_abordagem,
  filtro_data_abordagem,
  IFNULL(excluir_ficha, 'Não') AS excluir_ficha,  
  created_user

 FROM {{ source('arcgis_raw', 'abordagem_ficha_raw') }}
</file>

<file path="queries/dbt_project.yml">
name: "queries"
version: "1.0"
profile: "rj_smas_dev"
model-paths: ["models"]

models:
  queries:
    dashboard_arcgis:
      materialized: table
</file>

<file path="queries/profiles.yml">
rj_smas_dev:
  target: dev
  outputs:
    dev:
      type: bigquery
      method: service-account
      project: rj-smas-dev
      dataset: dashboard_arcgis
      threads: 2
      keyfile: /etc/gcp/credentials/leoneabreu-smas.json
      timeout_seconds: 300
      location: US
</file>

<file path="requirements.txt">
agate==1.9.1
aiohappyeyeballs==2.6.1
aiohttp==3.12.1
aiosignal==1.3.2
altair==5.5.0
annotated-types==0.7.0
anyio==4.9.0
arcgis==2.4.1
argon2-cffi==23.1.0
argon2-cffi-bindings==21.2.0
arrow==1.3.0
asttokens==3.0.0
async-lru==2.0.5
attrs==25.3.0
babel==2.17.0
backports.tarfile==1.2.0
beautifulsoup4==4.13.4
bleach==6.2.0
blinker==1.9.0
cachetools==5.5.2
certifi==2025.4.26
cffi==1.17.1
charset-normalizer==3.4.2
click==8.2.0
cloudpickle==3.1.1
colorama==0.4.6
comm==0.2.2
contourpy==1.3.2
cryptography==44.0.3
cycler==0.12.1
daff==1.4.2
dask==2024.12.1
dask-expr==1.1.21
db-dtypes==1.4.3
dbt-adapters==1.15.3
dbt-bigquery==1.9.2
dbt-common==1.25.0
dbt-core==1.9.4
dbt-extractor==0.6.0
dbt-protos==1.0.315
dbt-semantic-interfaces==0.7.4
debugpy==1.8.14
decorator==5.2.1
deepdiff==7.0.1
defusedxml==0.7.1
dlt==1.11.0
docstring_parser==0.16
executing==2.2.0
fastjsonschema==2.21.1
fonttools==4.58.0
fqdn==1.5.1
frozenlist==1.6.0
fsspec==2025.5.1
gcloud==0.18.3
gcsfs==2025.5.1
geomet==1.1.0
gitdb==4.0.12
GitPython==3.1.44
giturlparse==0.12.0
google-api-core==2.24.2
google-auth==2.40.1
google-auth-oauthlib==1.2.2
google-cloud-aiplatform==1.94.0
google-cloud-bigquery==3.32.0
google-cloud-bigquery-storage==2.31.0
google-cloud-core==2.4.3
google-cloud-dataproc==5.18.1
google-cloud-resource-manager==1.14.2
google-cloud-storage==2.19.0
google-crc32c==1.7.1
google-genai==1.16.1
google-resumable-media==2.7.2
googleapis-common-protos==1.70.0
grpc-google-iam-v1==0.14.2
grpcio==1.72.0rc1
grpcio-status==1.71.0
h11==0.16.0
hexbytes==1.3.1
httpcore==1.0.9
httplib2==0.22.0
httpx==0.28.1
humanize==4.12.3
idna==3.10
importlib-metadata==6.11.0
ipykernel==6.29.5
ipython==9.2.0
ipython_pygments_lexers==1.1.1
isodate==0.6.1
isoduration==20.11.0
jaraco.classes==3.4.0
jaraco.context==6.0.1
jaraco.functools==4.1.0
jedi==0.19.2
jeepney==0.9.0
Jinja2==3.1.6
json5==0.12.0
jsonpath-ng==1.7.0
jsonpointer==3.0.0
jsonschema==4.23.0
jsonschema-specifications==2025.4.1
jupyter-events==0.12.0
jupyter-lsp==2.2.5
jupyter_client==8.6.3
jupyter_core==5.7.2
jupyter_server==2.16.0
jupyter_server_terminals==0.5.3
jupyterlab==4.4.2
jupyterlab_pygments==0.3.0
jupyterlab_server==2.27.3
keyring==25.6.0
kiwisolver==1.4.8
leather==0.4.0
locket==1.0.0
lxml==5.4.0
makefun==1.16.0
markdown-it-py==3.0.0
MarkupSafe==3.0.2
mashumaro==3.14
matplotlib==3.10.3
matplotlib-inline==0.1.7
mdurl==0.1.2
mistune==3.1.3
more-itertools==10.7.0
msgpack==1.1.0
multidict==6.4.4
narwhals==1.41.0
nbclient==0.10.2
nbconvert==7.16.6
nbformat==5.10.4
nest-asyncio==1.6.0
networkx==3.4.2
notebook_shim==0.2.4
numpy==1.26.4
oauth2client==4.1.3
oauthlib==3.2.2
ordered-set==4.1.0
orjson==3.10.18
overrides==7.7.0
packaging==24.2
pandas==2.2.3
pandas-gbq==0.29.0
pandocfilters==1.5.1
parsedatetime==2.6
parso==0.8.4
partd==1.4.2
pathspec==0.12.1
pathvalidate==3.2.3
pendulum==3.1.0
pexpect==4.9.0
pillow==11.2.1
platformdirs==4.3.8
pluggy==1.6.0
ply==3.11
prometheus_client==0.21.1
prompt_toolkit==3.0.51
propcache==0.3.1
proto-plus==1.26.1
protobuf==5.29.4
psutil==7.0.0
ptyprocess==0.7.0
pure_eval==0.2.3
puremagic==1.29
pyarrow==16.1.0
pyasn1==0.6.1
pyasn1_modules==0.4.2
pycparser==2.22
pydantic==2.11.4
pydantic-settings==2.9.1
pydantic_core==2.33.2
pydata-google-auth==1.9.1
pydeck==0.9.1
Pygments==2.19.1
pylerc==4.0
pyparsing==3.2.3
pyspnego==0.11.2
python-dateutil==2.9.0.post0
python-dotenv==1.1.0
python-json-logger==3.3.0
python-slugify==8.0.4
pytimeparse==1.1.8
pytz==2025.2
PyYAML==6.0.2
pyzmq==26.4.0
referencing==0.36.2
requests==2.32.3
requests-oauthlib==2.0.0
requests-toolbelt==1.0.0
requirements-parser==0.13.0
rfc3339-validator==0.1.4
rfc3986-validator==0.1.1
rich==14.0.0
rich-argparse==1.7.1
rpds-py==0.24.0
rsa==4.9.1
SecretStorage==3.3.3
semver==3.0.4
Send2Trash==1.8.3
shapely==2.1.1
simplejson==3.20.1
six==1.17.0
smmap==5.0.2
sniffio==1.3.1
snowplow-tracker==1.1.0
soupsieve==2.7
sqlglot==26.21.0
sqlparse==0.5.3
stack-data==0.6.3
streamlit==1.45.1
tenacity==9.1.2
terminado==0.18.1
text-unidecode==1.3
tinycss2==1.4.0
toml==0.10.2
tomlkit==0.13.2
toolz==1.0.0
tornado==6.4.2
tqdm==4.67.1
traitlets==5.14.3
truststore==0.10.1
types-python-dateutil==2.9.0.20241206
typing-inspection==0.4.0
typing_extensions==4.13.2
tzdata==2025.2
ujson==5.10.0
uri-template==1.3.0
urllib3==2.4.0
watchdog==6.0.0
wcwidth==0.2.13
webcolors==24.11.1
webencodings==0.5.1
websocket-client==1.8.0
websockets==15.0.1
yarl==1.20.0
zipp==3.21.0
</file>

<file path="pipeline/flows.py">
# pipeline/flows.py
from pathlib import Path
import yaml
import sys
import subprocess

from .tasks import extract_arcgis, stage_to_parquet, load_to_bigquery

# Caminho para o YAML de configurações de ingestão
CONFIG_PATH = Path(__file__).with_name("pipelines.yaml")
# Diretório do projeto dbt (pasta paralela `queries`)
DBT_PROJECT_DIR = Path(__file__).parent.parent / "queries"

def incremental_flow() -> None:
    """
    Percorre o YAML e executa:
      1️⃣ Extract   (ArcGIS)
      2️⃣ Stage     (Parquet + timestamp)
      3️⃣ Load      (BigQuery)
      4️⃣ Transform (dbt models gold)
    """
    cfg = yaml.safe_load(CONFIG_PATH.read_text())

    for job in cfg:
        account = job.get("account", "siurb")
        for layer_name, idx in job["layers"].items():
            print(f"↳ Extraindo {job['name']}/{layer_name} (layer {idx})…")

            # 1️⃣ Extract
            df = extract_arcgis(
                feature_id = job["feature_id"],
                account    = account,
                layer      = idx,
            )
            if df.empty:
                print("   • Nada a carregar.")
                continue

            # 2️⃣ Stage
            tmp = Path(f"/tmp/{job['name']}_{layer_name}.parquet")
            stage_to_parquet(df, tmp)        # timestamp incluído aqui

            # 3️⃣ Load
            table = f"{job['name']}_{layer_name}_raw"
            load_to_bigquery(tmp, table)
            print(f"   • {len(df):,} linhas → {table}")

    # 4️⃣ Transform (dbt)
    print("🔄 Executando dbt models (gold)...")

    result = subprocess.run(
        ["dbt", "run", "--project-dir", str(DBT_PROJECT_DIR)],
        cwd=DBT_PROJECT_DIR,
        capture_output=True,
        text=True,
    )
    print(result.stdout)
    if result.returncode != 0:
        print(result.stderr)
        raise RuntimeError("❌ dbt run falhou")
    print("✅ dbt concluído com sucesso.")

if __name__ == "__main__":
    incremental_flow()
</file>

<file path="queries/models/dashboard_arcgis/schema.yml">
version: 2

sources:
  - name: arcgis_raw
    database: rj-smas-dev
    schema: arcgis_raw
    tables:
      - name: abordagem_repeat_raw
      - name: abordagem_ficha_raw

models:
  - name: abordagem_repeat
    description: "Tabela tratada com os dados de repetição (repeat)"
    columns:
      - name: objectid
        description: ""
      - name: globalid
        description: ""
      - name: repeat_unidade_calculo_tratada
        description: ""
      - name: repeat_unidade_cas
        description: ""
      - name: repeat_nome_usuario
        description: ""
      - name: repeat_data_nascimento
        description: ""
      - name: repeat_idade
        description: ""
      - name: repeat_faixa_etaria
        description: ""
      - name: repeat_estado_nascimento_tratada
        description: ""
      - name: repeat_nome_mae
        description: ""
      - name: repeat_nome_pai
        description: ""
      - name: repeat_raca_cor_etnia_tratada
        description: ""
      - name: repeat_sexo
        description: ""
      - name: turno_abordagem
        description: ""
      - name: data_abordagem
        description: ""
      - name: ano_num_data_abordagem
        description: ""
      - name: dia_num_data_abordagem
        description: ""
      - name: mes_abrev_data_abordagem
        description: ""
      - name: ano_mes_data_abordagem
        description: ""
      - name: bairro_abord
        description: ""
      - name: coordenadas
        description: ""
      - name: note_creas_tratada
        description: ""
      - name: resp_abordagem
        description: ""
      - name: resp_abordagem1
        description: ""
      - name: acao_conjunta
        description: ""
      - name: permanencia_rua_tratada
        description: ""
      - name: tempo_permanencia_tratada
        description: ""
      - name: principal_motivo_permanencia
        description: ""
      - name: flag_conflito_familiar
        description: ""
      - name: flag_abandono_familiar
        description: ""
      - name: flag_desocupacao
        description: ""
      - name: flag_orfandade
        description: ""
      - name: flag_acesso_a_renda
        description: ""
      - name: flag_desemprego
        description: ""
      - name: flag_desemprego_dos_pais
        description: ""
      - name: flag_transtorno_psiquiatrico
        description: ""
      - name: flag_uso_drogas_ilicitas
        description: ""
      - name: flag_trabalho_infantil
        description: ""
      - name: flag_exploracao_sexual
        description: ""
      - name: flag_egresso_sistema_prisional
        description: ""
      - name: flag_alcoolismo_motivo
        description: ""
      - name: flag_violencia_conflito_comuni
        description: ""
      - name: flag_preferencia_vontade_prop
        description: ""
      - name: flag_egresso_mse
        description: ""
      - name: flag_imigrante
        description: ""
      - name: flag_migrante
        description: ""
      - name: flag_refugiado
        description: ""
      - name: flag_ns_nr_motivo
        description: ""
      - name: e_migrante
        description: ""
      - name: migrante_terra_natal_tratada
        description: ""
      - name: possui_referencia_tratada
        description: ""
      - name: possui_documento
        description: ""
      - name: documentacao
        description: ""
      - name: flg_documentacao_identidade
        description: ""
      - name: flg_documentacao_cnh
        description: ""
      - name: flg_documentacao_registro_nasc
        description: ""
      - name: flg_documentacao_ctps
        description: ""
      - name: flg_documentacao_cpf
        description: ""
      - name: flg_documentacao_passaporte
        description: ""
      - name: escolaridade_tratada
        description: ""
      - name: recebe_beneficio
        description: ""
      - name: beneficios
        description: ""
      - name: flag_bolsa_familia
        description: ""
      - name: flag_bpc
        description: ""
      - name: flag_seguro_desemprego
        description: ""
      - name: flag_aposentadoria
        description: ""
      - name: flag_pensionista
        description: ""
      - name: flag_outros_ben
        description: ""
      - name: beneficios_outros
        description: ""
      - name: ocupacao_tratada
        description: ""
      - name: flag_nao_tem_interesse
        description: ""
      - name: flag_gastronomia
        description: ""
      - name: flag_beleza
        description: ""
      - name: flag_pequenos_reparos
        description: ""
      - name: flag_jardinagem
        description: ""
      - name: flag_empreendedorismo
        description: ""
      - name: flag_producao_artesanal
        description: ""
      - name: flag_inclusao_digital
        description: ""
      - name: flag_outros_curso
        description: ""
      - name: flag_curso_ns_nr
        description: ""
      - name: flag_nao_tem
        description: ""
      - name: flag_alcoolismo
        description: ""
      - name: flag_asma_bronquite
        description: ""
      - name: flag_covid_19
        description: ""
      - name: flag_cancer_tumores
        description: ""
      - name: flag_diabetes
        description: ""
      - name: flag_dengue
        description: ""
      - name: flag_depen_quimica
        description: ""
      - name: flag_epilepsia
        description: ""
      - name: flag_escabiose
        description: ""
      - name: flag_hanseniase
        description: ""
      - name: flag_hepatite
        description: ""
      - name: flag_hipertensao_doenca_cardio
        description: ""
      - name: flag_hiv_aids
        description: ""
      - name: flag_pneumonia
        description: ""
      - name: flag_sarampo
        description: ""
      - name: flag_sifilis
        description: ""
      - name: flag_transtorno_mental
        description: ""
      - name: flag_trauma_fisico
        description: ""
      - name: flag_tuberculose
        description: ""
      - name: flag_ns_nr
        description: ""
      - name: aceita_acolhimento_tratada
        description: ""
      - name: motivo_acolhimento_nao
        description: ""
      - name: outro_motivo
        description: ""
      - name: flag_motivo_renda
        description: ""
      - name: flag_motivo_regra
        description: ""
      - name: flag_motivo_moradia
        description: ""
      - name: flag_motivo_animal
        description: ""
      - name: flag_motivo_n_interesse
        description: ""
      - name: flag_motivo_outro
        description: ""
      - name: unidade_destino_tratada
        description: ""
      - name: equipamento_destino_tratada
        description: ""
      - name: encam_creas_tratada
        description: ""
      - name: encam_centropop_tratada
        description: ""
      - name: encam_cras
        description: ""
      - name: encaminhamento_rede
        description: ""
      - name: encaminhamento_rede_tratada
        description: ""
      - name: flg_sem_encaminhamento
        description: ""
      - name: flg_encam_creas
        description: ""
      - name: flg_encam_centropop
        description: ""
      - name: flg_encam_cras
        description: ""
      - name: flg_encam_conselhotutelar
        description: ""
      - name: flg_encam_encaminhamento_saude
        description: ""
      - name: flg_encam_defensoria_publica
        description: ""
      - name: flg_encam_detran
        description: ""
      - name: flg_encam_cartorio
        description: ""
      - name: flg_encam_fundacao_leaoxiii
        description: ""
      - name: flg_encam_receita_federal
        description: ""
      - name: flg_encam_delegacia
        description: ""
      - name: flg_encam_outros
        description: ""
      - name: parentrowid
        description: ""
      - name: created_user
        description: ""


models:
  - name: abordagem_ficha
    description: "Tabela gold para BI, gerada a partir da abordagem_ficha_raw."
    columns:
      - name: uniquerowid
        description: "Identificador único da ficha."
      - name: unidade_calculo
        description: "Unidade de cálculo do registro."
      - name: nome_usuario
        description: "Nome do usuário."
      - name: data_nascimento
        description: "Data de nascimento, formatada."
      - name: cpf
        description: "CPF do usuário."
      - name: nome_mae
        description: "Nome da mãe do usuário."
      - name: filtro_ano_ultima_abordagem
        description: "Ano da última abordagem."
      - name: excluir_ficha
        description: "Indicador de ficha excluída."
      - name: created_user
        description: "Usuário que criou o registro."
</file>

<file path="entrypoint.sh">
#!/usr/bin/env bash
set -euo pipefail           # aborta se qualquer comando falhar

while true; do
  echo "⏱️  $(date) — disparando incremental_flow"
  python -m pipeline.flows incremental_flow
  status=$?

  if [ $status -ne 0 ]; then
    echo "❌  $(date) — fluxo falhou (exit $status). Encerrando contêiner."
    exit $status            # encerra o script ⇒ contêiner para
  fi

  echo "🏁  $(date) — ciclo concluído, dormindo 1 h"
  sleep 3600
done
</file>

<file path=".gitignore">
# credenciais
.env
.env__pycache__/
*.pyc
/sandbox/
</file>

<file path=".github/workflows/ci_cd.yml">
name: CI · Build · Push

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  test:                              # 1️⃣ lint + pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt dbt-core dbt-bigquery
          pip install flake8 pytest

      - name: Lint
        continue-on-error: true
        run: flake8 pipeline

      - name: Tests
        run: pytest || echo "⚠️  Ainda sem testes — adicione depois"

  smoke-dbt:                         # 2️⃣ compila o dbt
    needs: test
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: queries
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install dbt only
        run: pip install --quiet dbt-core dbt-bigquery

      - name: dbt compile
        run: |
          dbt parse --project-dir queries --profiles-dir queries

  build-push:                       # 3️⃣ publica imagem só se smoke OK
    needs: smoke-dbt
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
</file>

<file path="queries/models/dashboard_arcgis/abordagem_repeat.sql">
SELECT
  objectid,
  globalid,
  CASE
   WHEN repeat_unidade_calculo = 'CREAS MARIA LINA DE CASTRO LIMA' THEN 'Creas Maria Lina De Castro Lima'
   WHEN repeat_unidade_calculo = 'CREAS SIMONE DE BEAUVOIR' THEN 'Creas Simone De Beauvoir'
   WHEN repeat_unidade_calculo = 'CREAS ARLINDO RODRIGUES' THEN 'Creas Arlindo Rodrigues'
   WHEN repeat_unidade_calculo = 'CREAS JANETE CLAIR' THEN 'Creas Janete Clair'
   WHEN repeat_unidade_calculo = 'CREAS PROFESSORA ALDAIZA SPOSATI' THEN 'Creas Professora Aldaiza Sposati'
   WHEN repeat_unidade_calculo = 'CREAS PROFESSORA MÁRCIA LOPES' THEN 'Creas Professora Marcia Lopes'
   WHEN repeat_unidade_calculo = 'CREAS STELLA MARIS' THEN 'Creas Stella Maris'
   WHEN repeat_unidade_calculo = 'CREAS NELSON CARNEIRO' THEN 'Creas Nelson Carneiro'
   WHEN repeat_unidade_calculo = 'CREAS WANDA ENGEL ADUAN' THEN 'Creas Wanda Engel Aduan'
   WHEN repeat_unidade_calculo = 'CREAS JOÃO HÉLIO FERNANDES VIEITES' THEN 'Creas Joao Helio Fernandes Vieites'
   WHEN repeat_unidade_calculo = 'CREAS DANIELA PEREZ' THEN 'Creas Daniela Perez'
   WHEN repeat_unidade_calculo = 'CREAS PADRE GUILHERME DECAMINADA' THEN 'Creas Padre Guilherme Decaminada'
   WHEN repeat_unidade_calculo = 'CREAS ZILDA ARNS NEUMANN' THEN 'Creas Zilda Arns Neumann'
   WHEN repeat_unidade_calculo = 'CREAS JOÃO MANUEL MONTEIRO' THEN 'Creas Joao Manuel Monteiro'
    WHEN repeat_unidade_calculo = 'CENTRO POP JOSÉ SARAMAGO' THEN 'Centro Pop José Saramago'
   WHEN repeat_unidade_calculo = 'CENTRO POP BÁRBARA CALAZANS' THEN 'Centro Pop Barbara  Calazans'
   ELSE repeat_unidade_calculo
   END AS repeat_unidade_calculo_tratada,
  repeat_unidade_cas,
  repeat_nome_usuario,

  SAFE.PARSE_DATE('%d/%m/%Y', repeat_data_nascimento) AS repeat_data_nascimento,

  repeat_idade,
  repeat_faixa_etaria,
  CASE
   WHEN repeat_estado_nascimento = 'rio_de_janeiro' THEN 'Rio de Janeiro'
   WHEN repeat_estado_nascimento = 'outros_estados' THEN 'Outros Estados'
   WHEN repeat_estado_nascimento = 'outro_pais' THEN 'Outro País'
   WHEN repeat_estado_nascimento = 'ns_nr' THEN 'NS/NR'
   ELSE repeat_estado_nascimento
   END AS repeat_estado_nascimento_tratada,
  repeat_nome_mae,
  repeat_nome_pai,
  CASE 
   WHEN repeat_raca_cor_etnia = 'parda' THEN 'Parda'
   WHEN repeat_raca_cor_etnia = 'branca' THEN 'Branca'
   WHEN repeat_raca_cor_etnia = 'preta' THEN 'Preta'
   WHEN repeat_raca_cor_etnia = 'amarela' THEN 'Amarela'
   WHEN repeat_raca_cor_etnia = 'indígena' THEN 'Indígena'
   WHEN repeat_raca_cor_etnia = 'nao_sabe_nao_quis_responder' THEN 'NS/NR'
   ELSE repeat_raca_cor_etnia
   END AS repeat_raca_cor_etnia_tratada,
  CASE
   WHEN repeat_sexo = 'masculino' THEN 'Masculino'
   WHEN repeat_sexo = 'feminino' THEN 'Feminino'
   WHEN repeat_sexo = 'intersexo' THEN 'Intersexo'
   WHEN repeat_sexo = 'nao_sabe_nao_quis_responder' THEN 'NS/NR'
   ELSE repeat_sexo
   END AS repeat_sexo,
  turno_abordagem,

  DATE(data_abordagem) AS data_abordagem,
  ano_num_data_abordagem,
  dia_num_data_abordagem,
  CASE
  WHEN RIGHT(mes_abrev_data_abordagem, 1) = '.' THEN mes_abrev_data_abordagem
  ELSE CONCAT(mes_abrev_data_abordagem, '.')
  END AS mes_abrev_data_abordagem,

  ano_mes_data_abordagem,
  bairro_abord,

  CONCAT(y, ', ', x) AS coordenadas,

  CASE
   WHEN note_creas = 'CREAS Janete Clair' THEN 'Creas Janete Clair'
   WHEN note_creas = 'CREAS Maria Lina de Castro Lima' THEN 'Creas Maria Lina De Castro Lima'
   WHEN note_creas = 'CREAS Daniela Perez' THEN 'Creas Daniela Perez'
   WHEN note_creas = 'CREAS Stella Maris' THEN 'Creas Stella Maris'
   WHEN note_creas = 'CREAS Nélson Carneiro' THEN 'Creas Nelson Carneiro'
   WHEN note_creas = 'CREAS Padre Guilherme Decaminada' THEN 'Creas Padre Guilherme Decaminada'
   WHEN note_creas = 'CREAS Professora Márcia Lopes' THEN 'Creas Professora Márcia Lopes'
   WHEN note_creas = 'CREAS Professora Aldaíza Sposati' THEN 'Creas Professora Aldaíza Sposati'
   WHEN note_creas = 'CREAS João Hélio Fernandes Vieites' THEN 'Creas João Hélio Fernandes Vieites'
   WHEN note_creas = 'CREAS Wanda Engel Aduan' THEN 'Creas Wanda Engel Aduan'
   WHEN note_creas = 'CREAS Zilda Arns Neumann' THEN 'Creas Zilda Arns Neumann'
   WHEN note_creas = 'CREAS Nelson Carneiro' THEN 'Creas Nelson Carneiro'
   WHEN note_creas = 'CREAS João Manoel Monteiro' THEN 'Creas João Manoel Monteiro'
   WHEN note_creas = 'CREAS Simone de Beauvoir' THEN 'Creas Simone de Beauvoir'
   WHEN note_creas = 'CREAS Arlindo Rodrigues' THEN 'Creas Arlindo Rodrigues'
   ELSE note_creas
   END AS note_creas_tratada,
  CASE
   WHEN resp_abordagem = 'cgppsr' THEN 'CTPR'
   WHEN resp_abordagem = 'creas' THEN 'CREAS'
   WHEN resp_abordagem = 'centro_pop' THEN 'CENTRO POP'
   ELSE resp_abordagem
   END AS resp_abordagem,
  CASE resp_abordagem1
   WHEN 'ouvidoria1' THEN 'Ouvidoria CTPR'
   WHEN'ouvidoria2' THEN 'Ouvidoria CREAS'
   WHEN'ouvidoria3' THEN 'Ouvidoria Centro POP'
   WHEN'tenda_acol_direitos' THEN 'Tenda acolhe com direitos'
   WHEN'abord_itinerante' THEN 'Abordagem CTPR'
   WHEN'deman_emergencial1' THEN 'Demanda emergencial CTPR'
   WHEN'naas' THEN 'NAAS'
   WHEN'itinerante' THEN 'Abordagem CREAS'
   WHEN'deman_emergencial2' THEN 'Demanda emergencial CREAS'
   WHEN'abordagem_social' THEN 'Abordagem Centro POP'
   WHEN'demanda_emergencial' THEN 'Demanda emergencial Centro POP'
   WHEN'ncp' THEN 'NCP'
   ELSE resp_abordagem1
   END AS resp_abordagem1,
  acao_conjunta,
  CASE
   WHEN permanencia_rua = 'h24' THEN '24 horas'
   WHEN permanencia_rua = 'apenas_durante_dia' THEN 'Apenas durante o dia'
   WHEN permanencia_rua = 'durante_semana_retorna_casa_final_de_semana' THEN 'Durante a semana'
   WHEN permanencia_rua = 'frequenta_cenas_de_uso_esporadicamente' THEN 'Frequenta cenas de uso'
   WHEN permanencia_rua = 'apenas_durante_noite' THEN 'Apenas durante a noite'
   WHEN permanencia_rua = 'nao_sabe_nao_respondeu' THEN 'NS/NR'
   ELSE permanencia_rua
   END AS permanencia_rua_tratada,
  CASE
   WHEN tempo_permanencia = 'de_1_a_3_anos' THEN 'De 1 a 3 anos'
   WHEN tempo_permanencia = 'de_3_a_6_anos' THEN 'De 3 a 6 anos'
   WHEN tempo_permanencia = 'de_1_a_3_meses' THEN 'De 1 a 3 meses'
   WHEN tempo_permanencia = 'menos_3_dias' THEN 'Menos de 3 dias'
   WHEN tempo_permanencia = 'de_6_meses_a_1_ano' THEN 'De 6 meses a 1 ano'
   WHEN tempo_permanencia = 'de_6_a_10_anos' THEN 'De 6 a 10 anos'
   WHEN tempo_permanencia = 'de_3_a_6_meses' THEN 'De 3 a 6 meses'
   WHEN tempo_permanencia = 'mais_de_10_anos' THEN 'Mais de 10 anos'
   WHEN tempo_permanencia = 'de_7_a_30_dias' THEN 'De 7 a 30 anos'
   WHEN tempo_permanencia = 'de_3_a_7_dias' THEN 'De 3 a 7 dias'
   WHEN tempo_permanencia = 'ns_nr' THEN 'NS/NR'
   ELSE tempo_permanencia
   END AS tempo_permanencia_tratada,
  principal_motivo_permanencia,

  flag_conflito_familiar,
  flag_abandono_familiar,
  flag_desocupacao,
  flag_orfandade,
  flag_acesso_a_renda,
  flag_desemprego,
  flag_desemprego_dos_pais,
  flag_transtorno_psiquiatrico,
  flag_uso_drogas_ilicitas,
  flag_trabalho_infantil,
  flag_exploracao_sexual,
  flag_egresso_sistema_prisional,
  flag_alcoolismo_motivo,
  flag_violencia_conflito_comuni,
  flag_preferencia_vontade_prop,
  flag_egresso_mse,
  flag_imigrante,
  flag_migrante,
  flag_refugiado,
  flag_ns_nr_motivo,
  e_migrante,
  CASE
   WHEN migrante_terra_natal = 'nao_sabe_nao_quis_responder' THEN 'NS/NR'
   WHEN migrante_terra_natal = 'sim' THEN 'Sim'
   WHEN migrante_terra_natal = 'nao' THEN 'Não'
   ELSE migrante_terra_natal
   END AS migrante_terra_natal_tratada,
  CASE
   WHEN possui_referencia = 'nao_sabe_nao_quis_responder' THEN 'NS/NR'
    WHEN possui_referencia = 'sim' THEN 'Sim'
    WHEN possui_referencia = 'nao' THEN 'Não'
   ELSE possui_referencia
   END AS possui_referencia_tratada,
  possui_documento,
  documentacao,

  flg_documentacao_identidade,
  flg_documentacao_cnh,
  flg_documentacao_registro_nasc,
  flg_documentacao_ctps,
  flg_documentacao_cpf,
  flg_documentacao_passaporte,
  CASE
   WHEN escolaridade = 'medio_incompleto' THEN 'Médio incompleto'
   WHEN escolaridade = 'fundamental_incompleto' THEN 'Fundamental incompleto'
   WHEN escolaridade = 'medio_completo' THEN 'Médio completo'
   WHEN escolaridade = 'fundamental_completo' THEN 'Fundamental completo'
   WHEN escolaridade = 'nao_alfabetizado' THEN 'Não alfabetizado'
   WHEN escolaridade = 'nao_sabe_nao_respondeu' THEN 'Não sabe/Não respondeu'
   WHEN escolaridade = 'superior_completo' THEN 'Superior completo'
   WHEN escolaridade = 'superior_incompleto' THEN 'Superior incompleto'
   WHEN escolaridade = 'nao_escolarizado' THEN 'Não escolarizado'
   ELSE escolaridade
   END AS escolaridade_tratada,
  recebe_beneficio,
  beneficios,

  flag_bolsa_familia,
  flag_bpc,
  flag_seguro_desemprego,
  flag_aposentadoria,
  flag_pensionista,
  flag_outros_ben,
  beneficios_outros,
  CASE
   WHEN ocupacao = 'catador' THEN 'Catador'
   WHEN ocupacao = 'pedinte' THEN 'Pedinte'
   WHEN ocupacao = 'ambulante' THEN 'Ambulante'
   WHEN ocupacao = 'bicos' THEN 'Bicos'
   WHEN ocupacao = 'outros' THEN 'Outros'
   WHEN ocupacao = 'impossibilitado_para_trabalho' THEN 'Impossibilitado'
   WHEN ocupacao = 'prostituicao' THEN 'Prostituição'
   WHEN ocupacao = 'ns_nr' THEN 'NS/NR' 
   ELSE ocupacao
   END AS ocupacao_tratada,

  flag_nao_tem_interesse,
  flag_gastronomia,
  flag_beleza,
  flag_pequenos_reparos,
  flag_jardinagem,
  flag_empreendedorismo,
  flag_producao_artesanal,
  flag_inclusao_digital,
  flag_outros_curso,
  flag_curso_ns_nr,
  flag_nao_tem,

  flag_alcoolismo,
  flag_asma_bronquite,
  flag_covid_19,
  flag_cancer_tumores,
  flag_diabetes,
  flag_dengue,
  flag_depen_quimica,
  flag_epilepsia,
  flag_escabiose,
  flag_hanseniase,
  flag_hepatite,
  flag_hipertensao_doenca_cardio,
  flag_hiv_aids,
  flag_pneumonia,
  flag_sarampo,
  flag_sifilis,
  flag_transtorno_mental,
  flag_trauma_fisico,
  flag_tuberculose,
  flag_ns_nr,

  CASE
   WHEN aceita_acolhimento IS NULL THEN 'nao'
   WHEN TRIM(LOWER(aceita_acolhimento)) = 'n/a' THEN 'nao'
   ELSE aceita_acolhimento
   END AS aceita_acolhimento_tratada,
  motivo_acolhimento_nao,
  outro_motivo,

  flag_motivo_renda,
  flag_motivo_regra,
  flag_motivo_moradia,
  flag_motivo_animal,
  flag_motivo_n_interesse,
  flag_motivo_outro,
  CASE
   WHEN unidade_destino = 'albergue' THEN 'Albergue'
   WHEN unidade_destino = 'central_recepcao' THEN 'Central de Recepção'
   WHEN unidade_destino = 'outros' THEN 'Outros'
   WHEN unidade_destino = 'com_terapeutica' THEN 'Comunidade Terapêutica'
   WHEN unidade_destino = 'urs' THEN 'URS'
   ELSE unidade_destino
   END AS unidade_destino_tratada,
  CASE equipamento_destino
    WHEN 'albergue_dercy_gonçalves' THEN 'Albergue Dercy Gonçalves'
    WHEN 'albergue_nise_da_silveira' THEN 'Albergue Nise da Silveira'
    WHEN 'craf_tom_jobim' THEN 'Craf Tom Jobim'
    WHEN 'assoc_maranatha_rj_madureira' THEN 'Associação Maranatha RJ Madureira'
    WHEN 'albergue_martin_luther_kingjr' THEN 'Albergue Martin Luther King Jr'
    WHEN 'assoc_maranatha_rj_lins_de_vasconcelos' THEN 'Associação Maranatha RJ Lins de Vasconcelos'
    WHEN 'inst_social_marca_de_cristo' THEN 'Instituto Social Marca de Cristo'
    WHEN 'urs_rio_acolhedor_paciencia' THEN 'Urs Rio Acolhedor Paciência'
    WHEN 'cri_pastor_carlos_portela' THEN 'Cri Pastor Carlos Portela'
    WHEN 'urs_haroldo_costa' THEN 'Urs Haroldo Costa'
    WHEN 'albergue_mais_tempo_lgbtqia' THEN 'Albergue Mais Tempo LGBTQIA'
    WHEN 'assoc_maranatha_rj_padre_miguel' THEN 'Associação Maranatha RJ Padre Miguel'
    WHEN 'assoc_maranatha_rj_vila_kennedy' THEN 'Associação Maranatha RJ Vila Kennedy'
    WHEN 'albergue_betinho' THEN 'Albergue Betinho'
    WHEN 'inst_revivendo_com_cristo' THEN 'Instituto Revivendo com Cristo'
    WHEN 'crca_ademar_ferreira_de_oliveira' THEN 'CRCA Ademar Ferreira de Oliveira'
    WHEN 'assoc_maranatha_rj_bangu' THEN 'Associação Maranatha RJ Bangu'
    WHEN 'crca_taiguara' THEN 'CRCA Taiguara'
    WHEN 'assoc_maranatha_rj_sepetiba' THEN 'Associação Maranatha RJ Sepetiba'
    WHEN 'albergue_alfonso_lavalle' THEN 'Albergue Alfonso Lavalle'
    WHEN 'assoc_maranatha_rj_vila_valqueire' THEN 'Associação Maranatha RJ Vila Valqueire'
    WHEN 'assoc_de_assistencia_social_videira' THEN 'Associação de Assistência Social Videira'
    WHEN 'projeto_alcançando_vidas' THEN 'Projeto Alcançando Vidas'
    WHEN 'camor' THEN 'CAMOR'
    WHEN 'assoc_maranatha_rj_engenho_de_dentro' THEN 'Associação Maranatha RJ Engenho de Dentro'
    WHEN 'inst_social_manasses_campo_grande2' THEN 'Instituto Social Manassés Campo Grande 2'
    WHEN 'inst_social_manasses_campo_grande1' THEN 'Instituto Social Manassés Campo Grande 1'
    WHEN 'comt_valentes_de_davi_escola_de_profetas' THEN 'COMT Valentes de Davi Escola de Profetas'
   ELSE equipamento_destino
   END AS equipamento_destino_tratada,
  CASE
   WHEN encam_creas = 'creas_maria_lina_de_castro_lima' THEN 'Creas Maria Lina De Castro Lima'
   WHEN encam_creas = 'creas_simone_de_beauvoir' THEN 'Creas Simone De Beauvoir'
   WHEN encam_creas = 'creas_arlindo_rodrigues' THEN 'Creas Arlindo Rodrigues'
   WHEN encam_creas = 'creas_janete_clair' THEN 'Creas Janete Clair'
   WHEN encam_creas = 'creas_professora_aldaiza_sposati' THEN 'Creas Professora Aldaiza Sposati'
   WHEN encam_creas = 'creas_professora_marcia_lopes' THEN 'Creas Professora Marcia Lopes'
   WHEN encam_creas = 'creas_stella_maris' THEN 'Creas Stella Maris'
   WHEN encam_creas = 'creas_nelson_carneiro' THEN 'Creas Nelson Carneiro'
   WHEN encam_creas = 'creas_wanda_engel_aduan' THEN 'Creas Wanda Engel Aduan'
   WHEN encam_creas = 'creas_joao_helio_fernandes_vieites' THEN 'Creas Joao Helio Fernandes Vieites'
   WHEN encam_creas = 'creas_daniela_perez' THEN 'Creas Daniela Perez'
   WHEN encam_creas = 'creas_padre_guilherme_decaminada' THEN 'Creas Padre Guilherme Decaminada'
   WHEN encam_creas = 'creas_zilda_arns_neumann' THEN 'Creas Zilda Arns Neumann'
   WHEN encam_creas = 'creas_joao_manuel_monteiro' THEN 'Creas Joao Manuel Monteiro'
   ELSE encam_creas
   END AS encam_creas_tratada,
  CASE
   WHEN encam_centropop = 'centro_pop_jose_saramago' THEN 'Centro Pop José Saramago'
   WHEN encam_centropop = 'centro_pop_barbara_calazans' THEN 'Centro Pop Barbara  Calazans'
   ELSE encam_centropop
   END AS encam_centropop_tratada,
  encam_cras,

  encaminhamento_rede,
  ARRAY_TO_STRING(
    ARRAY(
      SELECT

        CASE
          WHEN LOWER(TRIM(part)) = 'cras' THEN 'CRAS'
          WHEN LOWER(TRIM(part)) = 'defensoria_publica' THEN 'Defensoria Pública'
          WHEN LOWER(TRIM(part)) = 'fundacao_leaoxii' THEN 'Fundação Leão XIII'
          WHEN LOWER(TRIM(part)) = 'outros' THEN 'Outros'
          WHEN LOWER(TRIM(part)) = 'creas' THEN 'CREAS'
          WHEN LOWER(TRIM(part)) = 'conselho_tutelar' THEN 'Conselho Tutelar'
          WHEN LOWER(TRIM(part)) = 'detran' THEN 'DETRAN'
          WHEN LOWER(TRIM(part)) = 'receita_federal' THEN 'Receita Federal'
          WHEN LOWER(TRIM(part)) = 'centro_pop' THEN 'Centro POP'
          WHEN LOWER(TRIM(part)) = 'encaminhamento_de_saude' THEN 'Encaminhamento de Saúde'
          WHEN LOWER(TRIM(part)) = 'cartorio' THEN 'Cartório'
          WHEN LOWER(TRIM(part)) = 'delegacia' THEN 'Delegacia'
          WHEN LOWER(TRIM(part)) = 'nao_houve_encaminhamento' THEN 'Sem encaminhamentos'
          ELSE encaminhamento_rede
        END
      FROM UNNEST(SPLIT(encaminhamento_rede, ',')) AS part
    ),
    ', '
  ) AS encaminhamento_rede_tratada,

  flg_sem_encaminhamento,
  flg_encam_creas,
  flg_encam_centropop,
  flg_encam_cras,
  flg_encam_conselhotutelar,
  flg_encam_encaminhamento_saude,
  flg_encam_defensoria_publica,
  flg_encam_detran,
  flg_encam_cartorio,
  flg_encam_fundacao_leaoxiii,
  flg_encam_receita_federal,
  flg_encam_delegacia,
  flg_encam_outros,
  parentrowid,
  created_user

 FROM {{ source('arcgis_raw', 'abordagem_repeat_raw') }}
</file>

<file path="Dockerfile">
# Imagem base enxuta
FROM python:3.11-slim

# Diretório de trabalho
WORKDIR /app

# Dependências
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Código + script de entrada
COPY . .

# garante que o profile seja incluído
COPY queries/profiles.yml /app/queries/profiles.yml

ENV DBT_PROFILES_DIR=/app/queries
COPY entrypoint.sh .
RUN chmod +x /app/entrypoint.sh

# Container roda o loop horário
ENTRYPOINT ["./entrypoint.sh"]
</file>

</files>
