{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-06-17T19:21:27.518973Z", "invocation_id": "98549210-f2c8-4cac-a22c-e4a7e466cd51", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T19:20:44.983030Z", "completed_at": "2025-06-17T19:20:44.994850Z"}, {"name": "execute", "started_at": "2025-06-17T19:20:44.995396Z", "completed_at": "2025-06-17T19:21:27.466929Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 42.48644423484802, "adapter_response": {"_message": "CREATE TABLE (18.3m rows, 24.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 18287270, "bytes_processed": 25604321, "bytes_billed": 26214400, "location": "US", "project_id": "rj-smas-dev", "job_id": "38fb1f10-982d-4a78-b32a-a9519dbf1432", "slot_ms": 5533923}, "message": "CREATE TABLE (18.3m rows, 24.4 MiB processed)", "failures": null, "unique_id": "model.queries.stg_repeat_names_cluster", "compiled": true, "compiled_code": "\n\n-- 1. Base com nomes normalizados\nWITH base AS (\n    SELECT\n        parentrowid,\n        nome_usuario_norm AS nm,\n        nome_mae_norm     AS mm,\n        ano_num_data_abordagem\n    FROM `rj-smas-dev`.`dashboard_arcgis_dev`.`stg_repeat_names`\n),\n\n-- 2. Bloqueio A  (SOUNDEX do nome)  \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nblk_a AS (\n    SELECT\n        *,\n        SOUNDEX(nm) AS blk\n    FROM base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY blk ORDER BY parentrowid) <= 2000\n),\n\npairs_a AS (\n    SELECT\n        a.parentrowid AS id_a,\n        b.parentrowid AS id_b,\n        a.nm, a.mm,\n        b.nm AS nm_b, b.mm AS mm_b\n    FROM blk_a a\n    JOIN blk_a b USING (blk)\n    WHERE a.parentrowid < b.parentrowid\n),\n\n-- 3. Bloqueio B  (SOUNDEX do nome + \u00faltimo sobrenome da m\u00e3e) \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nblk_b AS (\n    SELECT\n        *,\n        CONCAT(\n          SOUNDEX(nm), '_',\n          SOUNDEX(SPLIT(mm, ' ')[SAFE_OFFSET(-1)])  -- \u00faltimo token\n        ) AS blk\n    FROM base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY blk ORDER BY parentrowid) <= 2000\n),\n\npairs_b AS (\n    SELECT\n        a.parentrowid AS id_a,\n        b.parentrowid AS id_b,\n        a.nm, a.mm,\n        b.nm AS nm_b, b.mm AS mm_b\n    FROM blk_b a\n    JOIN blk_b b USING (blk)\n    WHERE a.parentrowid < b.parentrowid\n),\n\n-- 4. Uni\u00e3o dos pares candidatos \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\npairs AS (\n    SELECT * FROM pairs_a\n    UNION ALL\n    SELECT * FROM pairs_b\n),\n\n-- 5. M\u00e9tricas de dist\u00e2ncia e conten\u00e7\u00e3o \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nscored AS (\n    SELECT\n        id_a, id_b,\n        EDIT_DISTANCE(nm,  nm_b) AS d_nm,\n        EDIT_DISTANCE(mm,  mm_b) AS d_mm,\n\n        ARRAY_LENGTH(\n          ARRAY(\n            SELECT x FROM UNNEST(SPLIT(nm, ' ')) x\n            INTERSECT DISTINCT\n            SELECT y FROM UNNEST(SPLIT(nm_b,' ')) y\n          )\n        ) / LEAST(\n              ARRAY_LENGTH(SPLIT(nm,  ' ')),\n              ARRAY_LENGTH(SPLIT(nm_b,' '))\n          )                                   AS cont_nm,\n\n        ARRAY_LENGTH(\n          ARRAY(\n            SELECT x FROM UNNEST(SPLIT(mm, ' ')) x\n            INTERSECT DISTINCT\n            SELECT y FROM UNNEST(SPLIT(mm_b,' ')) y\n          )\n        ) / LEAST(\n              ARRAY_LENGTH(SPLIT(mm,  ' ')),\n              ARRAY_LENGTH(SPLIT(mm_b,' '))\n          )                                   AS cont_mm\n    FROM pairs\n),\n\n-- 6. Pares que satisfazem a regra de duplicidade \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\ndupes AS (\n    SELECT id_a, id_b\n    FROM scored\n    WHERE (d_nm <= 2 OR cont_nm >= 0.8)\n      AND (d_mm <= 2 OR cont_mm >= 0.8)\n),\n\n-- 7. Grafo n\u00e3o-direcionado (componentes conexas) \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\ngraph AS (\n    SELECT parentrowid, parentrowid AS neigh FROM base\n    UNION ALL\n    SELECT id_a, id_b FROM dupes\n    UNION ALL\n    SELECT id_b, id_a FROM dupes\n),\n\nseed AS (\n    SELECT\n        parentrowid,\n        MIN(neigh) OVER (PARTITION BY parentrowid) AS cluster_seed\n    FROM graph\n),\n\n-- 8. Resultado final (uma linha por parentrowid) \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nfinal AS (\n    SELECT\n        b.parentrowid,\n        b.nm,\n        b.mm,\n        b.ano_num_data_abordagem,\n        MIN(cluster_seed) OVER (PARTITION BY cluster_seed) AS cluster_id,\n        COUNT(*)        OVER (PARTITION BY cluster_seed)   AS cluster_size\n    FROM base b\n    JOIN seed USING (parentrowid)\n)\n\nSELECT\n    parentrowid,\n    nm,\n    mm,\n    ano_num_data_abordagem,\n    cluster_id,\n    cluster_size,\n    cluster_size > 1 AS is_duplicado\nFROM final", "relation_name": "`rj-smas-dev`.`dashboard_arcgis_dev`.`stg_repeat_names_cluster`", "batch_results": null}], "elapsed_time": 43.979729413986206, "args": {"log_level": "info", "populate_cache": true, "cache_selected_only": false, "printer_width": 80, "invocation_command": "dbt run --project-dir queries --profiles-dir queries --select stg_repeat_names_cluster", "strict_mode": false, "project_dir": "queries", "version_check": true, "which": "run", "skip_nodes_if_on_run_start_fails": false, "log_format": "default", "require_explicit_package_overrides_for_builtin_materializations": true, "static_parser": true, "partial_parse": true, "print": true, "write_json": true, "require_batched_execution_for_custom_microbatch_strategy": false, "macro_debugging": false, "log_format_file": "debug", "empty": false, "require_yaml_configuration_for_mf_time_spines": false, "indirect_selection": "eager", "target": "dev", "require_nested_cumulative_type_params": false, "profiles_dir": "queries", "select": ["stg_repeat_names_cluster"], "vars": {}, "state_modified_compare_more_unrendered_values": false, "exclude": [], "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "source_freshness_run_project_hooks": false, "introspect": true, "log_file_max_bytes": 10485760, "log_level_file": "debug", "quiet": false, "state_modified_compare_vars": false, "log_path": "queries/logs", "defer": false, "require_resource_names_without_spaces": false, "show_resource_report": false, "favor_state": false, "partial_parse_file_diff": true, "send_anonymous_usage_stats": true}}